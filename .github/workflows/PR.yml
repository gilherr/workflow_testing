name: GilerPR

on:
  pull_request:
    types: ["opened","synchronize","reopened"]

jobs:
  main_job:
    name: main_job_name
    runs-on: ubuntu-18.04
    env:
      CI: "github_actions"
    strategy:
      fail-fast: false
    steps:
      - name: Checkout files
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      # - name: should it be skipped?
      #   env:
      #     COMMIT_FILTER: "[skip tests]"
      #   run: |
      #     readonly local last_commit_log=$(git log -1 --pretty=format:"%s")
      #     readonly local filter_count=$(echo "$last_commit_log" | grep -c "$COMMIT_FILTER" )

      #     if [[ "$filter_count" -eq 0 ]]; then
      #       echo "No skip request found"
      #     else
      #       echo "Found $COMMIT_FILTER in last commit"
      #       exit 78
      #     fi

      - name: Set Skip Flag
        run: |
          if git log -2 --format=%s | grep '\[skip tests\]' 2>&1 > /dev/null; then
            echo "Skipping Build and Tests"
            echo ::set-env name=skip_tests::true
          else
            echo "setting skip to false"
            echo ::set-env name=skip_tests::false
          fi

      - name: Testing commitmsg env setup
        if: env.skip_tests
        run: echo "skipping tests as requested in commit message $skip_tests"

      - name: Testing commitmsg $env setup
        if: ${{ $skip_tests }}
        run: echo "skipping tests as requested in commit message $skip_tests"

      - name: Catching the skip exit code
        if: failure()
        run: echo "Skip request found, this is the failure step $skip_tests"

        ################ Data Dump ################

      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

        ################ Data Dump End ################
