name: GilerPR

on:
  pull_request:
    types: ["opened","synchronize","reopened"]

jobs:
  main_job:
    name: main_job_name
    runs-on: ubuntu-18.04
    env:
      CI: "github_actions"
      SKIP: ${{ contains('hello world', 'wor') }}
    strategy:
      fail-fast: false
    steps:

      - name: should it be skipped?
        env:
          COMMIT_FILTER: "[skip tests]"
        run: |
          # Get last commit message
          readonly local last_commit_log=$(git log -1 --pretty=format:"%s")
          echo "last commit log: $last_commit_log"

          readonly local filter_count=$(echo "$last_commit_log" | grep -c "$COMMIT_FILTER" )
          echo "number of occurence of '$COMMIT_FILTER' in '$last_commit_log': $filter_count"

          if [[ "$filter_count" -eq 0 ]]; then
            echo "all good, continue"
          else
            echo "the last commit log \"$last_commit_log\" contains \"$COMMIT_FILTER\", stopping"
            exit 78
          fi
      - name: Checkout files
        uses: actions/checkout@v2

      - name: Print commit message
        run: echo "$(git log -2 --format=%s)" && echo "$(git log -2 --format=%s | grep skip)" && echo $(git log -1 --pretty=format:"%s")

      - name: Get Commit Message
        run: echo "::set-env name=commitmsg::$(git log -2 --format=%s)"

      - name: Print stuff
        run: git log -3 --format="%s"

      - name: Testing commitmsg env setup
        if: contains( env.commitmsg , '[skip tests]' )
        run: echo "skipping tests as requested in commit message $commitmsg"

      - name: Testing env reading
        run: echo "SKIP - $SKIP"
        ################ Data Dump ################

      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

        ################ Data Dump End ################
